import io.micronaut.gradle.MicronautRuntime
import io.micronaut.gradle.MicronautTestRuntime
import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id "idea"
    id "eclipse"
    id "io.micronaut.application" version "3.2.2"
    id "com.github.johnrengelman.shadow" version "$shadowVersion"
}

group 'com.wengnerits.monitoring.micronaut'
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

application {
    mainClass.set("com.wengnerits.monitoring.micronaut.ApplicationMain")
}

dependencies {
    annotationProcessor(platform("io.micronaut:micronaut-bom:${micronautVersion}"))
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut:micronaut-runtime")

    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")

    runtimeOnly("ch.qos.logback:logback-classic")
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

test {
    useJUnitPlatform()

    testLogging {
        showExceptions = true
        showCauses = true
        showStackTraces = true
        showStandardStreams = true
        exceptionFormat = TestExceptionFormat.FULL
        displayGranularity = 2

        events(TestLogEvent.FAILED, TestLogEvent.SKIPPED, TestLogEvent.PASSED)
    }
}

graalvmNative.toolchainDetection = false

micronaut {
    enableNativeImage(false)
            .version(micronautVersion)
            .runtime(MicronautRuntime.UNDERTOW)
            .testRuntime(MicronautTestRuntime.JUNIT_5)

    processing.incremental(true)
    processing.annotations("xyz.chrisime")
}
